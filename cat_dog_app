HomePage.js //inside components folder
var React = require("react");
var PetComponent = require("./PetComponent");

var style = {
    textAlign: "center",
    fontSize: "2em",
    color: "rebeccapurple"
}

var btnStyle = {
    marginTop: "30px",
    marginRight: "5px",
    height: "25px"
}

class HomePage extends React.Component {
    constructor(props){
        super(props);
        this.state = {
            catLikesCount: 0,
            dogLikesCount: 0
        };
        this.handleLikeBtnClick = this.handleLikeBtnClick.bind(this);
        this.handleDislikeBtnClick = this.handleDislikeBtnClick.bind(this);
        this.handleShowWinnerBtnClick = this.handleShowWinnerBtnClick.bind(this);
        this.handleStartOverBtnClick = this.handleStartOverBtnClick.bind(this);
    }

    handleShowWinnerBtnClick() {
        var catLikesCount = this.state.catLikesCount;
        var dogLikesCount = this.state.dogLikesCount;

        if (catLikesCount > dogLikesCount) {
            console.log("Cat is the Winner");
        } else if (catLikesCount < dogLikesCount) {
            console.log("Dog is the Winner");
        } else {
            console.log("It's a Tie!");
        }
    }

    handleLikeBtnClick(event) {
        var petName = event.target.value;
        console.log(this.props.petName +" Component Like Button Clicked")
/*        this.setState({
            likesCount: this.state.likesCount + 1
        }); */
/*        this.setState(function(prevState){
            return {
            likesCount: prevState.likesCount + 1
            };
        }); */
        if (petName === "Cat") {
            this.setState( function(prevState) {
                return {
                    catLikesCount: prevState.catLikesCount + 1,
                    dogLikesCount: prevState.dogLikesCount
                };
            });
        } else if (petName === "Dog") {
            this.setState( function(prevState) {
                return {
                    catLikesCount: prevState.catLikesCount,
                    dogLikesCount: prevState.dogLikesCount + 1
                };
            });
        }
    }

    handleDislikeBtnClick(event) {
        var petName = event.target.value;
        console.log(this.props.petName +" Component DisLike Button Clicked")
/*        this.setState({
            likesCount: this.state.likesCount - 1
        }); */
/*        this.setState(function(prevState){
            return {
            likesCount: prevState.likesCount - 1
            };
        }); */
        if (petName === "Cat") {
            this.setState( function(prevState) {
                return {
                    catLikesCount: prevState.catLikesCount - 1,
                    dogLikesCount: prevState.dogLikesCount
                };
            });
        } else if (petName === "Dog") {
            this.setState( function(prevState) {
                return {
                    catLikesCount: prevState.catLikesCount,
                    dogLikesCount: prevState.dogLikesCount - 1
                };
            });
        }
    } 

    handleStartOverBtnClick() {

    }

    render() {
        return (
        <div>
        <h1 style={style}>
            Welcome to Cat and Dog Cuteness Fight Game!!!
        </h1>
        <div style={{marginTop:60,textAlign:"center"}}>
            <PetComponent 
                petName="Cat"
                likesCount = {this.state.catLikesCount}
                petImage="http://www.cutestpaw.com/wp-content/uploads/2011/11/Henke.jpg"
                onLikeBtnClick = {this.handleLikeBtnClick}
                onDislikeBtnClick = {this.handleDislikeBtnClick}
            />
            <PetComponent 
                petName="Dog" 
                likesCount = {this.state.dogLikesCount}
                petImage="http://images.all-free-download.com/images/graphicthumb/cute_dog_photo_picture_7_168843.jpg"
                onLikeBtnClick = {this.handleLikeBtnClick}
                onDislikeBtnClick = {this.handleDislikeBtnClick}
            />
        </div>
        <div style={{textAlign:"center"}}>
        <button style={btnStyle} onClick={this.handleShowWinnerBtnClick}>Show Winner</button>
        <button style={btnStyle} onClick={this.handleStartOverBtnClick}>Start Over</button>
        </div>
        </div>
        );
    }
}

module.exports = HomePage;


======================================================

PetComponent.js //inside components folder
var React = require("react");

var compStyle = {
    display: "inline-block",
    marginLeft: "auto",
    marginRight: "auto"
}

var btnStyle = {
    height: "25px",
    width: "70px",
    marginTop: "10px",
    marginLeft: "5px",
    marginRight: "5px"
}

class PetComponent extends React.Component {
    render() {
        return (
            <div style={compStyle}>
            <h3>{this.props.petName} Likes: {this.props.likesCount}</h3>
            <img 
                style={{height:400,width:400}}
                src={this.props.petImage}
                alt={"Cute "+this.props.petName}/>
                    <br />
                <button style={btnStyle} value={this.props.petName} onClick={this.props.onLikeBtnClick}>Like</button>
                <button style={btnStyle} value={this.props.petName} onClick={this.props.onDislikeBtnClick}>Dislike</button>
            </div>
        );
    }
}

module.exports = PetComponent;




=============================================

index.js
var React = require("react");
var ReactDOM = require("react-dom");
var HomePage = require("./components/HomePage");

ReactDOM.render(
    <HomePage />,
    document.getElementById("root")
)
